effect <- cs2 - cs1
effect
tb <- data %>%
mutate(after = year > 2006) %>%     #Created a variable 'after' for year after 2006
group_by(after, state) %>%
summarize(meth=mean(meth))
tb
lm(meth ~ state*I(year > 2006) + age + tv + sex, data = data) %>% summary()
knitr::opts_chunk$set(echo = TRUE)
data <- read.csv("./Downloads/yrbs.tsv.bz2", sep = '\t')
data <- read.csv("~/Users/dma150/Downloads/yrbs.tsv.bz2", sep = '\t')
data <- read.csv("~/desktop/yrbs.tsv.bz2", sep = '\t')
head(data)
## 2.1. Identifying assumption / Counterfactual: without the treatment (an ad campaign), both groups would follow the same trend
## 2.2. Both groups follow the same trend until around 2007, when the national average for meth use increases while Montana's meth use decreases. This suggests that the treatment has a negative effect on meth use. The long term effect of the campaign looks plausible.
tb <- data %>%
mutate(after = year > 2006) %>%     #Created a variable 'after' for year after 2006
group_by(after, state) %>%
summarize(meth=mean(meth))
tb
cs1 <- tb$meth[1] - tb$meth[2]
cs2 <- tb$meth[3] - tb$meth[4]
effect <- cs2 - cs1
effect
# 1.8% decrease of meth use for Montana
lm(meth ~ state*I(year > 2006), data = data) %>% summary()
lm(meth ~ state*I(year > 2006) + age + tv + sex, data = data) %>% summary()
## 3.5  The effect we find is that about 2% fall in Montana Meth usage. The simple model had a 1.82% fall, the other model with more covariants has a 1.84% fall.
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
data = read.csv("/Users/dma150/Desktop/progresa-sample.csv.bz2", header = TRUE, sep = ",", dec = ".")
T <- data %>%
filter(year == 97) %>%
filter(poor == "pobre") %>%
filter(progresa == "basal")
T2 <- data %>%
filter(year == 97) %>%
filter(poor == "pobre") %>%
filter(progresa == "basal") %>%
summarise(avgSex = mean(sex,  na.rm = TRUE),
avgIndig = mean(indig,  na.rm = TRUE),
avgDistSec = mean(dist_sec,  na.rm = TRUE),
avgGrc = mean(grc,  na.rm = TRUE),
avgFamN = mean(fam_n,  na.rm = TRUE),
avgMinDist = mean(min_dist,  na.rm = TRUE),
avgDistCap = mean(dist_cap,  na.rm = TRUE),
avgHohEdu = mean(hohedu,  na.rm = TRUE),
avgHohWag = mean(hohwag,  na.rm = TRUE),
avgHohSex = mean(hohsex,  na.rm = TRUE),
avgHohAge = mean(hohage,  na.rm = TRUE),
avgAge = mean(age,  na.rm = TRUE),
avgWelfareIndex = mean(welfare_index,  na.rm = TRUE))
C <- data %>%
filter(year == 97) %>%
filter(poor == "pobre") %>%
filter(progresa == 0)
C2 <- data %>%
filter(year == 97) %>%
filter(poor == "pobre") %>%
filter(progresa == 0) %>%
summarise(avgSex = mean(sex,  na.rm = TRUE),
avgIndig = mean(indig,  na.rm = TRUE),
avgDistSec = mean(dist_sec,  na.rm = TRUE),
avgGrc = mean(grc,  na.rm = TRUE),
avgFamN = mean(fam_n,  na.rm = TRUE),
avgMinDist = mean(min_dist,  na.rm = TRUE),
avgDistCap = mean(dist_cap,  na.rm = TRUE),
avgHohEdu = mean(hohedu,  na.rm = TRUE),
avgHohWag = mean(hohwag,  na.rm = TRUE),
avgHohSex = mean(hohsex,  na.rm = TRUE),
avgHohAge = mean(hohage,  na.rm = TRUE),
avgAge = mean(age,  na.rm = TRUE),
avgWelfareIndex = mean(welfare_index,  na.rm = TRUE))
names <- list("sex", "indig", "dist_sec", "grc", "fam_n", "min_dist", "dist_cap", "hohedu", "hohwag", "hohsex", "hohage", "age", "welfare_index")
fun1 <- function(x, y, column){
t.test(x[,column], y[,column])$p.value
}
## assumption that the column names in both datasets are at the same indices for all names
fun2 <- function(x, y, num){
x[1, num] - y[1, num]
}
## creating lists storing p-values and differences in avgs
i <- 1
empty_list <- c()
empty_list2 <- c()
for(name in names) {
x <- fun1(C, T, name)
y <- fun2(T2, C2, i)
empty_list[i]<- x
empty_list2[i]<- y
print(y)
i <- i + 1
}
## creation of table
C2 <- data.frame(t(C2))
head(C2)
T2 <- data.frame(t(T2))
head(T2)
T2["C2"] <- C2
T2["p-value"] <- empty_list
T2["diff"] <- empty_list2
T2
head(data)
DiD <- data %>%
mutate(after = year > 97) %>%
group_by(after, progresa) %>%
summarize(sc = mean(sc, na.rm = TRUE))
DiD
trendZero <- DiD$sc[3] - DiD$sc[1]
trendOne <- DiD$sc[4] - DiD$sc[2]
diffInDiff  = trendOne - trendZero
diffInDiff
## DiD regression model
lm(sc-progresa*I(year>97), data = data) %>% summary()
## DiD regression model
lm(sc ~ progresa*I(year>97), data = data) %>% summary()
## DiD regression model
lm(sc ~ progresa*I(year>97), data = data) %>% summary()
## Full DiD regression model
lm(sc~progresa*I(year>97) + sex + indig + dist_sec + grc + fam_n + min_dist + dist_cap + hohedu + hohwag + hohsex + hohage + age + welfare_index, data = data) %>% summary()
knitr::opts_chunk$set(echo = TRUE)
# Find top 10 jobs to show the means, then you can come up with a relationship graph
industry <- hearing_data2 %>% group_by(NAICS_descr) %>%
summarise(l2k = mean(L2k)) %>%
arrange(desc(l2k)) %>%
head(n = 10L)
knitr::opts_chunk$set(echo = TRUE)
# Set up
library(dplyr)
library(knitr)
library(ggplot2)
library(tidyr)
# Load data
hearing_data <- read.csv("Paper1_WebData_Final.csv")
hdata <- hearing_data %>% filter(hearing_data$L2k != '999' & hearing_data$L2k != '998' & hearing_data$L2k != '997' & hearing_data$L2k > '0' & hearing_data$R2k != '999' & hearing_data$R2k != '998' & hearing_data$R2k != '997' & hearing_data$R2k > '0')
hearing_data2 = na.omit(hdata)
l2k <- hdata$L2k
r2k <- hdata$R2k
clean_l2k <- na.omit(l2k)
mean2 <- mean(x = sort(x = clean_l2k)[-c(1, length(x = clean_l2k))])
median2 <- median(clean_l2k)
max2 <- max(clean_l2k)
min2 <- min(clean_l2k)
sd2 <- sd(clean_l2k)
range2 <- range(clean_l2k)
# Graph showing the distribution of Left ear hearing threshold value for 2000 Hz frequency Each interval of 5 represents the hearing level in decibels (dB), less meaning it's better. When above 25 dB, that means that a worker is said to have developed 'material hearing impairment'. Each bucket represents the total number of people who had a hearing level at 2000 hz frequency.
p <- ggplot(hearing_data2, aes(x=L2k)) + geom_histogram(color="black", fill="white", breaks = seq(5, 40, by = 5)) +
labs(x="Left Ear 2000 hz Frequency (dB)")
p
clean_r2k <- na.omit(r2k)
mean2 <- mean(x = sort(x = clean_r2k)[-c(1, length(x = clean_r2k))])
median2 <- median(clean_r2k)
max2 <- max(clean_r2k)
min2 <- min(clean_r2k)
sd2 <- sd(clean_r2k)
range2 <- range(clean_r2k)
# Graph showing the distribution of Left ear hearing threshold value for 2000 Hz frequency Each interval of 5 represents the hearing level in decibels (dB), less meaning it's better. When above 25 dB, that means that a worker is said to have developed 'material hearing impairment'. Each bucket represents the total number of people who had a hearing level at 2000 hz frequency.
p <- ggplot(hearing_data2, aes(x=R2k)) + geom_histogram(color="black", fill="white", breaks = seq(5, 40, by = 5)) +
labs(x="Right Ear 2000 hz Frequency (dB)")
p
# Find top 10 jobs to show the means, then you can come up with a relationship graph
industry <- hearing_data2 %>% group_by(NAICS_descr) %>%
summarise(l2k = mean(L2k)) %>%
arrange(desc(l2k)) %>%
head(n = 10L)
p <- ggplot(industry, aes(NAICS_descr, l2k)) + geom_col() + xlab(NULL) + ylab("decibels")
q <- p + aes(stringr::str_wrap(NAICS_descr, 28), reorder(l2k, -Count) + xlab(NULL) + ylab('decibels')
q + coord_flip()
# Find top 10 jobs to show the means, then you can come up with a relationship graph
industry <- hearing_data2 %>% group_by(NAICS_descr) %>%
summarise(l2k = mean(L2k)) %>%
arrange(desc(l2k)) %>%
head(n = 10L)
p <- ggplot(industry, aes(NAICS_descr, l2k)) + geom_col() + xlab(NULL) + ylab("decibels")
q <- p + aes(stringr::str_wrap(NAICS_descr, 28), l2k + xlab(NULL) + ylab('decibels')
q + coord_flip()
# Find top 10 jobs to show the means, then you can come up with a relationship graph
industry <- hearing_data2 %>% group_by(NAICS_descr) %>%
summarise(l2k = mean(L2k)) %>%
arrange(desc(l2k)) %>%
head(n = 10L)
p <- ggplot(industry, aes(NAICS_descr, l2k)) + geom_col() + xlab(NULL) + ylab("decibels")
q <- p + aes(stringr::str_wrap(NAICS_descr, 28), l2k) + xlab(NULL) + ylab('decibels')
q + coord_flip()
# Find top 10 jobs to show the means, then you can come up with a relationship graph
industry <- hearing_data2 %>% group_by(NAICS_descr) %>%
summarise(l2k = mean(L2k)) %>%
arrange(desc(l2k)) %>%
head(n = 10L)
p <- ggplot(industry, aes(NAICS_descr, l2k)) + geom_col() + xlab(NULL) + ylab("decibels")
q <- p + aes(stringr::str_wrap(NAICS_descr, 28), l2k) + xlab(NULL) + ylab('decibels')
#q + coord_flip()
# Find top 10 jobs to show the means, then you can come up with a relationship graph
industry <- hearing_data2 %>% group_by(NAICS_descr) %>%
summarise(l2k = mean(L2k)) %>%
arrange(desc(l2k)) %>%
head(n = 10L)
p <- ggplot(industry, aes(NAICS_descr, l2k)) + geom_col() + xlab(NULL) + ylab("decibels")
q <- p + aes(stringr::str_wrap(NAICS_descr, 28), l2k) + xlab(NULL) + ylab('decibels')
#q + coord_flip()
q
# Find top 10 jobs to show the means, then you can come up with a relationship graph
industry <- hearing_data2 %>% group_by(NAICS_descr) %>%
summarise(l2k = mean(L2k)) %>%
arrange(desc(l2k)) %>%
head(n = 10L)
p <- ggplot(industry, aes(NAICS_descr, l2k)) + geom_col() + xlab(NULL) + ylab("decibels")
q <- p + aes(stringr::str_wrap(x = reorder((NAICS_descr, 28), -Count), l2k) + xlab(NULL) + ylab('decibels')
# Find top 10 jobs to show the means, then you can come up with a relationship graph
industry <- hearing_data2 %>% group_by(NAICS_descr) %>%
summarise(l2k = mean(L2k)) %>%
arrange(desc(l2k)) %>%
head(n = 10L)
p <- ggplot(industry, aes(NAICS_descr, l2k)) + geom_col() + xlab(NULL) + ylab("decibels")
q <- p + aes(stringr::str_wrap(x = reorder((NAICS_descr), -Count), l2k) + xlab(NULL) + ylab('decibels')
#q + coord_flip()
q
# Find top 10 jobs to show the means, then you can come up with a relationship graph
industry <- hearing_data2 %>% group_by(NAICS_descr) %>%
summarise(l2k = mean(L2k)) %>%
arrange(desc(l2k)) %>%
head(n = 10L)
p <- ggplot(industry, aes(NAICS_descr, l2k)) + geom_col() + xlab(NULL) + ylab("decibels")
q <- p + aes(stringr::str_wrap(x = reorder((NAICS_descr), -Count), l2k) + xlab(NULL) + ylab('decibels')
q
# Find top 10 jobs to show the means, then you can come up with a relationship graph
industry <- hearing_data2 %>% group_by(NAICS_descr) %>%
summarise(l2k = mean(L2k)) %>%
arrange(desc(l2k)) %>%
head(n = 10L)
p <- ggplot(industry, aes(NAICS_descr, l2k)) + geom_col() + xlab(NULL) + ylab("decibels")
q <- p + aes(x = reorder(stringr::str_wrap(NAICS_descr, 28), -Count), l2k) + xlab(NULL) + ylab('decibels')
#q + coord_flip()
q
# Find top 10 jobs to show the means, then you can come up with a relationship graph
industry <- hearing_data2 %>% group_by(NAICS_descr) %>%
summarise(l2k = mean(L2k)) %>%
arrange(desc(l2k)) %>%
head(n = 10L)
p <- ggplot(industry, aes(NAICS_descr, l2k)) + geom_col() + xlab(NULL) + ylab("decibels")
q <- p + aes(x = reorder(stringr::str_wrap(NAICS_descr, 28), -l2k)) + xlab(NULL) + ylab('decibels')
#q + coord_flip()
q
# Find top 10 jobs to show the means, then you can come up with a relationship graph
industry <- hearing_data2 %>% group_by(NAICS_descr) %>%
summarise(l2k = mean(L2k)) %>%
arrange(desc(l2k)) %>%
head(n = 10L)
p <- ggplot(industry, aes(NAICS_descr, l2k)) + geom_col() + xlab(NULL) + ylab("decibels")
q <- p + aes(x = reorder(stringr::str_wrap(NAICS_descr, 28), -l2k)) + xlab(NULL) + ylab('decibels')
q + coord_flip()
# Find top 10 jobs to show the means, then you can come up with a relationship graph
industry <- hearing_data2 %>% group_by(NAICS_descr) %>%
summarise(l2k = mean(L2k)) %>%
arrange(desc(l2k)) %>%
head(n = 10L)
p <- ggplot(industry, aes(NAICS_descr, l2k)) + geom_col() + xlab(NULL) + ylab("decibels")
q <- p + aes(x = reorder(stringr::str_wrap(NAICS_descr, 28), +l2k)) + xlab(NULL) + ylab('decibels')
q + coord_flip()
setwd("~/Desktop/INFO478/Info478FinalProject")
setwd("~/Desktop/INFO478/Info478FinalProject")
library(ggplot2)
library(dplyr)
library(plotly)
library(shiny)
library(tidyr)
hearing <- read.csv("Paper1_WebData_Final.csv")
hearing_cleaned <- hearing %>%
select(l500k, l1k, l2k, l3k, l4k, l6k, l8k, r500k, r1k, r2k, r3k, r4k, r6k, r8k) %>%
drop_na()
head(hearing)
hearing_cleaned <- hearing %>%
select(L500k, l1k, l2k, l3k, l4k, l6k, l8k, r500k, r1k, r2k, r3k, r4k, r6k, r8k) %>%
drop_na()
hearing_cleaned <- hearing %>%
select(L500k, L1k, L2k, L3k, L4k, L6k, L8k, R500k, R1k, R2k, R3k, R4k, R6k, R8k) %>%
drop_na()
hearing_cleaned <- hearing_cleaned %>%
filter(hearing$L500k != '999' & hearing$L500k != '998' & hearing$L500k != '997' & hearing$L500k > '0' &
hearing$L1k != '999' & hearing$L1k != '998' & hearing$L1k != '997' & hearing$L1k > '0' &
hearing$L2k != '999' & hearing$L2k != '998' & hearing$L2k != '997' & hearing$L2k > '0' &
hearing$L3K != '999' & hearing$L3k != '998' & hearing$L3k != '997' & hearing$L3k > '0')
hearing_cleaned <- hearing_cleaned %>%
filter(hearing$L500k != '999' & hearing$L500k != '998' & hearing$L500k != '997' & hearing$L500k > '0' &
hearing$L1k != '999' & hearing$L1k != '998' & hearing$L1k != '997' & hearing$L1k > '0' &
hearing$L2k != '999' & hearing$L2k != '998' & hearing$L2k != '997' & hearing$L2k > '0' &
hearing$L4k != '999' & hearing$L4k != '998' & hearing$L4k != '997' & hearing$L4k > '0')
hearing_cleaned <- hearing_cleaned %>%
filter(hearing$L500k != '999' & hearing$L500k != '998' & hearing$L500k != '997' & hearing$L500k > '0' &
hearing$L1k != '999' & hearing$L1k != '998' & hearing$L1k != '997' & hearing$L1k > '0' &
hearing$L2k != '999' & hearing$L2k != '998' & hearing$L2k != '997' & hearing$L2k > '0'
hearing_cleaned <- hearing_cleaned %>%
filter(hearing$L500k != '999' & hearing$L500k != '998' & hearing$L500k != '997' & hearing$L500k > '0' &
hearing$L1k != '999' & hearing$L1k != '998' & hearing$L1k != '997' & hearing$L1k > '0' &
hearing$L2k != '999' & hearing$L2k != '998' & hearing$L2k != '997' & hearing$L2k > '0')
hearing_cleaned <- hearing_cleaned %>%
filter(hearing$L500k != '999' & hearing$L500k != '998' & hearing$L500k != '997' & hearing$L500k > '0' &
hearing$L1k != '999' & hearing$L1k != '998' & hearing$L1k != '997' & hearing$L1k > '0' &
hearing$L2k != '999' & hearing$L2k != '998' & hearing$L2k != '997' & hearing$L2k > '0' &
hearing$L3k != '998' & hearing$L3k != '997' & hearing$L3k > '0')
hearing_cleaned <- hearing_cleaned %>%
filter(hearing$L500k != '999' & hearing$L500k != '998' & hearing$L500k != '997' & hearing$L500k > '0' &
hearing$L1k != '999' & hearing$L1k != '998' & hearing$L1k != '997' & hearing$L1k > '0' &
hearing$L2k != '999' & hearing$L2k != '998' & hearing$L2k != '997' & hearing$L2k > '0' &
hearing$L3k != '997' & hearing$L3k > '0')
hearing_cleaned <- hearing_cleaned %>%
filter(hearing$L500k != '999' & hearing$L500k != '998' & hearing$L500k != '997' & hearing$L500k > '0' &
hearing$L1k != '999' & hearing$L1k != '998' & hearing$L1k != '997' & hearing$L1k > '0' &
hearing$L2k != '999' & hearing$L2k != '998' & hearing$L2k != '997' & hearing$L2k > '0' &
hearing$L3k > '0')
hearing_cleaned <- hearing_cleaned %>%
filter(hearing$L500k != '999' & hearing$L500k != '998' & hearing$L500k != '997' & hearing$L500k > '0' &
hearing$L1k != '999' & hearing$L1k != '998' & hearing$L1k != '997' & hearing$L1k > '0' &
hearing$L2k != '999' & hearing$L2k != '998' & hearing$L2k != '997' & hearing$L2k > '0')
library(ggplot2)
library(dplyr)
library(plotly)
library(shiny)
library(tidyr)
hearing <- read.csv("Paper1_WebData_Final.csv")
hearing_cleaned <- hearing %>%
select(L500k, L1k, L2k, L3k, L4k, L6k, L8k, R500k, R1k, R2k, R3k, R4k, R6k, R8k) %>%
drop_na()
hearing_cleaned_2 <- hearing_cleaned %>%
filter(hearing$L500k != '999' & hearing$L500k != '998' & hearing$L500k != '997' & hearing$L500k > '0' &
hearing$L1k != '999' & hearing$L1k != '998' & hearing$L1k != '997' & hearing$L1k > '0' &
hearing$L2k != '999' & hearing$L2k != '998' & hearing$L2k != '997' & hearing$L2k > '0')
hearing_cleaned_2 <- hearing_cleaned %>%
filter(hearing$L500k %in% (996:1000) & hearing$L500k > '0')
hearing_cleaned_2 <- hearing_cleaned %>%
filter(hearing_cleaned$L500k %in% (996:1000) & hearing_cleaned$L500k > '0')
hearing_cleaned_2 <- hearing_cleaned %>%
filter(hearing_cleaned$L500k %in% (996:1000) & hearing_cleaned$L500k > '0' &
hearing_cleaned$L1k %in% (996:1000) & hearing_cleaned$L1k > '0')
hearing_cleaned_2 <- hearing_cleaned %>%
filter(hearing_cleaned$L500k %in% (996:1000) & hearing_cleaned$L500k > '0' &
hearing_cleaned$L1k %in% (996:1000) & hearing_cleaned$L1k > '0' &
hearing_cleaned$L2k %in% (996:1000) & hearing_cleaned$L2k > '0')
hearing_cleaned_2 <- hearing_cleaned %>%
filter(hearing_cleaned$L500k %in% (996:1000) & hearing_cleaned$L500k > '0' &
hearing_cleaned$L1k %in% (996:1000) & hearing_cleaned$L1k > '0' &
hearing_cleaned$L2k %in% (996:1000) & hearing_cleaned$L2k > '0'&
hearing_cleaned$L4k %in% (996:1000) & hearing_cleaned$L4k > '0' &
hearing_cleaned$L6k %in% (996:1000) & hearing_cleaned$L6k > '0' &
hearing_cleaned$L8k %in% (996:1000) & hearing_cleaned$L8k > '0')
hearing_cleaned_2 <- hearing_cleaned %>%
filter(hearing_cleaned$L500k %in% (996:1000) & hearing_cleaned$L500k > '0' &
hearing_cleaned$L1k %in% (996:1000) & hearing_cleaned$L1k > '0' &
hearing_cleaned$L2k %in% (996:1000) & hearing_cleaned$L2k > '0' &
hearing_cleaned$L4k %in% (996:1000) & hearing_cleaned$L4k > '0' &
hearing_cleaned$L6k %in% (996:1000) & hearing_cleaned$L6k > '0' &
hearing_cleaned$L8k %in% (996:1000) & hearing_cleaned$L8k > '0' &
hearing_cleaned$R500k %in% (996:1000) & hearing_cleaned$R500k > '0' &
hearing_cleaned$R1k %in% (996:1000) & hearing_cleaned$R1k > '0' &
hearing_cleaned$R2k %in% (996:1000) & hearing_cleaned$R2k > '0' &
hearing_cleaned$R3k %in% (996:1000) & hearing_cleaned$R3k > '0' &
hearing_cleaned$R4k %in% (996:1000) & hearing_cleaned$R4k > '0' &
hearing_cleaned$R6k %in% (996:1000) & hearing_cleaned$R6k > '0' &
hearing_cleaned$R8k %in% (996:1000) & hearing_cleaned$R8k > '0')
hearing_cleaned_2 <- hearing_cleaned %>%
filter(hearing_cleaned$L500k != %in% (996:1000) & hearing_cleaned$L500k > '0' &
hearing_cleaned$L1k %in% (996:1000) & hearing_cleaned$L1k > '0' &
hearing_cleaned$L2k %in% (996:1000) & hearing_cleaned$L2k > '0' &
hearing_cleaned$L4k %in% (996:1000) & hearing_cleaned$L4k > '0' &
hearing_cleaned$L6k %in% (996:1000) & hearing_cleaned$L6k > '0' &
hearing_cleaned$L8k %in% (996:1000) & hearing_cleaned$L8k > '0' &
hearing_cleaned$R500k %in% (996:1000) & hearing_cleaned$R500k > '0' &
hearing_cleaned$R1k %in% (996:1000) & hearing_cleaned$R1k > '0' &
hearing_cleaned$R2k %in% (996:1000) & hearing_cleaned$R2k > '0' &
hearing_cleaned$R3k %in% (996:1000) & hearing_cleaned$R3k > '0' &
hearing_cleaned$R4k %in% (996:1000) & hearing_cleaned$R4k > '0' &
hearing_cleaned$R6k %in% (996:1000) & hearing_cleaned$R6k > '0' &
hearing_cleaned$R8k %in% (996:1000) & hearing_cleaned$R8k > '0')
hearing_cleaned_2 <- hearing_cleaned %>%
filter(hearing_cleaned$L500k %in% (0:996) & hearing_cleaned$L500k > '0' &
hearing_cleaned$L1k %in% (0:996) & hearing_cleaned$L1k > '0' &
hearing_cleaned$L2k %in% (0:996) & hearing_cleaned$L2k > '0' &
hearing_cleaned$L4k %in% (0:996) & hearing_cleaned$L4k > '0' &
hearing_cleaned$L6k %in% (0:996) & hearing_cleaned$L6k > '0' &
hearing_cleaned$L8k %in% (0:996) & hearing_cleaned$L8k > '0' &
hearing_cleaned$R500k %in% (0:996) & hearing_cleaned$R500k > '0' &
hearing_cleaned$R1k %in% (0:996) & hearing_cleaned$R1k > '0' &
hearing_cleaned$R2k %in% (0:996) & hearing_cleaned$R2k > '0' &
hearing_cleaned$R3k %in% (0:996) & hearing_cleaned$R3k > '0' &
hearing_cleaned$R4k %in% (0:996) & hearing_cleaned$R4k > '0' &
hearing_cleaned$R6k %in% (0:996) & hearing_cleaned$R6k > '0' &
hearing_cleaned$R8k %in% (0:996) & hearing_cleaned$R8k > '0')
head(hearing_cleaned_2)
hearing <- read.csv("Paper1_WebData_Final.csv")
hearing_cleaned <- hearing %>%
select(L500k, L1k, L2k, L3k, L4k, L6k, L8k, R500k, R1k, R2k, R3k, R4k, R6k, R8k) %>%
drop_na()
hearing_cleaned_2 <- hearing_cleaned %>%
filter(hearing_cleaned$L500k %in% (0:996) & hearing_cleaned$L500k > '0' &
hearing_cleaned$L1k %in% (0:996) & hearing_cleaned$L1k > '0' &
hearing_cleaned$L2k %in% (0:996) & hearing_cleaned$L2k > '0' &
hearing_cleaned$L4k %in% (0:996) & hearing_cleaned$L4k > '0' &
hearing_cleaned$L6k %in% (0:996) & hearing_cleaned$L6k > '0' &
hearing_cleaned$L8k %in% (0:996) & hearing_cleaned$L8k > '0' &
hearing_cleaned$R500k %in% (0:996) & hearing_cleaned$R500k > '0' &
hearing_cleaned$R1k %in% (0:996) & hearing_cleaned$R1k > '0' &
hearing_cleaned$R2k %in% (0:996) & hearing_cleaned$R2k > '0' &
hearing_cleaned$R3k %in% (0:996) & hearing_cleaned$R3k > '0' &
hearing_cleaned$R4k %in% (0:996) & hearing_cleaned$R4k > '0' &
hearing_cleaned$R6k %in% (0:996) & hearing_cleaned$R6k > '0' &
hearing_cleaned$R8k %in% (0:996) & hearing_cleaned$R8k > '0')
# --------- CREATE WIDGETS ----------
runApp()
setwd("~/Desktop/INFO478/Info478FinalProject")
runApp()
hyp_odds$tab
data("bdendo")
library(HSAUR)
library(Epi)
library(MASS)
library(epitools)
library(dplyr)
library(tidyr)
library(ggplot2)
library(plotly)
data("bdendo")
hyp_odds <- epitab(bdendo$d, bdendo$hyp, method = "oddsratio", verbose = FALSE)
hyp_odds$tab
View(hyp_odds)
runApp()
#install packages
library(shiny)
library(shiny)
library(ggplot2)
library(plotly)
hearing <- read.csv("Paper1_WebData_Final.csv")
hearing_cleaned <- hearing %>%
select(L500k, L1k, L2k, L3k, L4k, L6k, L8k, R500k, R1k, R2k, R3k, R4k, R6k, R8k) %>%
drop_na()
library(shiny)
library(ggplot2)
library(plotly)
library(dplyr)
hearing <- read.csv("Paper1_WebData_Final.csv")
hearing_cleaned <- hearing %>%
select(L500k, L1k, L2k, L3k, L4k, L6k, L8k, R500k, R1k, R2k, R3k, R4k, R6k, R8k) %>%
drop_na()
library(shiny)
library(ggplot2)
library(plotly)
library(dplyr)
hearing <- read.csv("Paper1_WebData_Final.csv")
hearing_cleaned <- hearing %>%
select(L500k, L1k, L2k, L3k, L4k, L6k, L8k, R500k, R1k, R2k, R3k, R4k, R6k, R8k) %>%
drop_na()
library(dplyr)
hearing_cleaned <- hearing %>%
select(L500k, L1k, L2k, L3k, L4k, L6k, L8k, R500k, R1k, R2k, R3k, R4k, R6k, R8k) %>%
drop_na()
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
hearing_cleaned <- hearing %>%
select(L500k, L1k, L2k, L3k, L4k, L6k, L8k, R500k, R1k, R2k, R3k, R4k, R6k, R8k) %>%
drop_na()
hearing_cleaned <- hearing %>% select(L500k, L1k, L2k, L3k, L4k, L6k, L8k, R500k, R1k, R2k, R3k, R4k, R6k, R8k) %>% drop_na()
risk_calc_binary <- function(df, col1, col2) {
count_low_col <- nrow(filter(df, df[[col1]] == 1 & df[[col2]] == 1))
count_no_low_col <- nrow(filter(df, df[[col1]] == 0 & df[[col2]] == 1))
count_no_low_no_col <- nrow(filter(df, df[[col1]] == 0 & df[[col2]] == 0))
count_low_no_col <- nrow(filter(df, df[[col1]] == 1 & df[[col2]] == 0))
risk_num <- count_low_col / (count_low_col + count_no_low_col)
risk_denom <- count_low_no_col / (count_low_no_col + count_no_low_no_col)
risk <- risk_num / risk_denom
risk
}
View(risk_calc_binary())
View(risk_calc_binary)
risk_smoke <- risk_calc_binary(birth, "low", "smoke")
risk_hyper <- risk_calc_binary(birth, "low", "ht")
library(ggplot2)
library(dplyr)
library(plotly)
library(shiny)
library(tidyr)
library(shiny)
library(ggplot2)
library(plotly)
library(tidyr)
library(tidyr)
remove.packages("tidyr")
install.packages("tidyr")
install.packages("tidyr")
library(shiny)
library(ggplot2)
library(plotly)
library(tidyr)
hearing <- read.csv("Paper1_WebData_Final.csv")
hearing_cleaned <- hearing %>% select(L500k, L1k, L2k, L3k, L4k, L6k, L8k, R500k, R1k, R2k, R3k, R4k, R6k, R8k) %>% drop_na()
install.packages("tidyr")
install.packages("tidyr")
hearing_cleaned <- hearing %>% select(L500k, L1k, L2k, L3k, L4k, L6k, L8k, R500k, R1k, R2k, R3k, R4k, R6k, R8k) %>% drop_na()
hearing_cleaned <- hearing %>%
select(L500k, L1k, L2k, L3k, L4k, L6k, L8k, R500k, R1k, R2k, R3k, R4k, R6k, R8k) %>%
drop_na()
install.packages("dplyr")
hearing_cleaned <- hearing %>%
select(L500k, L1k, L2k, L3k, L4k, L6k, L8k, R500k, R1k, R2k, R3k, R4k, R6k, R8k) %>%
drop_na()
hearing_cleaned <- hearing %>%
select(L500k, L1k, L2k, L3k, L4k, L6k, L8k, R500k, R1k, R2k, R3k, R4k, R6k, R8k) %>%
drop_na()
